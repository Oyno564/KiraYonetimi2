// <auto-generated />
using System;
using KiraYonetimi.DataAcsses.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KiraYonetimi.API.Migrations
{
    [DbContext(typeof(KiraContext))]
    [Migration("20250919123243_mig_1")]
    partial class mig_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Apartment", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ApartBlock")
                        .HasColumnType("integer");

                    b.Property<int>("ApartFloor")
                        .HasColumnType("integer");

                    b.Property<int>("ApartId")
                        .HasColumnType("integer");

                    b.Property<int>("ApartNo")
                        .HasColumnType("integer");

                    b.Property<bool>("ApartOwnerOrTenant")
                        .HasColumnType("boolean");

                    b.Property<bool>("ApartStatus")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ApartTypePkId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PkId");

                    b.HasIndex("ApartTypePkId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("KiraYonetimi.API.Models.Entity.APIUser", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("APIUserPkId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<bool?>("Role")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("PkId");

                    b.ToTable("APIUsers");
                });

            modelBuilder.Entity("KiraYonetimi.Entities.Entities.ApartType", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("TypeName")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PkId");

                    b.ToTable("ApartTypes");
                });

            modelBuilder.Entity("KiraYonetimi.Entities.Entities.Invoice", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ApartUserPkId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ApartmentPkId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("integer");

                    b.Property<int>("InvoiceMonth")
                        .HasColumnType("integer");

                    b.Property<bool>("InvoiceStatus")
                        .HasColumnType("boolean");

                    b.Property<int>("InvoiceYear")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PkId");

                    b.HasIndex("ApartmentPkId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("KiraYonetimi.Entities.Entities.Message", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FromUserId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("MessageContent")
                        .HasColumnType("text");

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MessageId")
                        .HasColumnType("integer");

                    b.Property<int>("ToUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserPkId")
                        .HasColumnType("uuid");

                    b.HasKey("PkId");

                    b.HasIndex("UserPkId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("KiraYonetimi.Entities.Entities.User", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlakaNo")
                        .HasColumnType("text");

                    b.Property<bool>("Role")
                        .HasColumnType("boolean");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("PkId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Apartment", b =>
                {
                    b.HasOne("KiraYonetimi.Entities.Entities.ApartType", "ApartType")
                        .WithMany("Apartments")
                        .HasForeignKey("ApartTypePkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApartType");
                });

            modelBuilder.Entity("KiraYonetimi.Entities.Entities.Invoice", b =>
                {
                    b.HasOne("Apartment", "Apartment")
                        .WithMany("Invoices")
                        .HasForeignKey("ApartmentPkId");

                    b.Navigation("Apartment");
                });

            modelBuilder.Entity("KiraYonetimi.Entities.Entities.Message", b =>
                {
                    b.HasOne("KiraYonetimi.Entities.Entities.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserPkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Apartment", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("KiraYonetimi.Entities.Entities.ApartType", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("KiraYonetimi.Entities.Entities.User", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
